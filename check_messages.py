#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π Avito (–±–µ–∑ Redis –ª–æ–≥–æ–≤)
"""

import sys
import os
import asyncio
import logging
from pathlib import Path
from datetime import datetime, timedelta

# –û—Ç–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ Redis –∏ –¥—Ä—É–≥–∏—Ö —à—É–º–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
logging.getLogger('aioredis').setLevel(logging.ERROR)
logging.getLogger('redis').setLevel(logging.ERROR)
logging.getLogger('app.services.avito_service').setLevel(logging.ERROR)

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ Python path
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

async def check_new_messages():
    """–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π Avito...")
    
    try:
        from app.config.settings import settings
        from app.services.avito_service import init_avito_service
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–µ–∑ –ª–æ–≥–æ–≤
        user_id = int(settings.AVITO_USER_ID)
        service = init_avito_service(settings.AVITO_CLIENT_ID, settings.AVITO_CLIENT_SECRET, user_id)
        
        # –ü–æ–ª—É—á–∞–µ–º —á–∞—Ç—ã
        chats = await service.get_chats(limit=10)
        print(f"üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º {len(chats)} —á–∞—Ç–æ–≤...")
        
        total_new = 0
        current_time = datetime.now().timestamp()
        last_24h = current_time - 86400  # 24 —á–∞—Å–∞ –Ω–∞–∑–∞–¥
        last_1h = current_time - 3600    # 1 —á–∞—Å –Ω–∞–∑–∞–¥
        
        for i, chat in enumerate(chats[:5], 1):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 5 —á–∞—Ç–æ–≤
            try:
                messages = await service.get_chat_messages(chat.id, limit=50)
                
                # –°—á–∏—Ç–∞–µ–º –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                new_24h = [msg for msg in messages if msg.created > last_24h and msg.author_id != user_id]
                new_1h = [msg for msg in messages if msg.created > last_1h and msg.author_id != user_id]
                
                if new_24h:
                    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
                    user_name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"
                    for user in chat.users:
                        if user['id'] != user_id:
                            user_name = user.get('name', f"User {user['id']}")
                            break
                    
                    print(f"üó®Ô∏è  –ß–∞—Ç {i}: {user_name}")
                    print(f"   üìÖ 24—á: {len(new_24h)} —Å–æ–æ–±—â–µ–Ω–∏–π")
                    print(f"   ‚è∞ 1—á: {len(new_1h)} —Å–æ–æ–±—â–µ–Ω–∏–π")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                    for msg in new_1h[-2:]:  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 2 –∑–∞ —á–∞—Å
                        msg_time = datetime.fromtimestamp(msg.created).strftime("%H:%M")
                        text = msg.content.get('text', '–ë–µ–∑ —Ç–µ–∫—Å—Ç–∞')[:60]
                        if len(text) == 60:
                            text += "..."
                        print(f"   ‚¨ÖÔ∏è  {msg_time}: {text}")
                    
                    total_new += len(new_24h)
                    
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤ —á–∞—Ç–µ {i}: {e}")
        
        print(f"\nüìä –ò—Ç–æ–≥–æ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ 24—á: {total_new}")
        
        if total_new == 0:
            print("‚úÖ –ù–µ—Ç –Ω–æ–≤—ã—Ö –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞")
        
        return total_new > 0
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        result = asyncio.run(check_new_messages())
        if result:
            print("\nüéâ –ù–∞–π–¥–µ–Ω—ã –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è!")
        else:
            print("\nüí§ –ù–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ—Ç")
    except KeyboardInterrupt:
        print("\nüëã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞")
    except Exception as e:
        print(f"\nüí• –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()