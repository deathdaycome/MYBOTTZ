#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∫–æ–ª–æ–Ω–æ–∫ start_date –∏ planned_end_date –≤ —Ç–∞–±–ª–∏—Ü—É projects
"""

import sys
import os
import sqlite3
from datetime import datetime

sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))))

def upgrade():
    """–î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –∫ —Ç–∞–±–ª–∏—Ü–µ projects"""
    print("üîÑ –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü—É projects...")
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (–Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø—É—Ç—å –¥—Ä—É–≥–æ–π)
    db_paths = ["business_card_bot.db", "data/bot.db", "./data/bot.db"]
    db_path = None
    
    for path in db_paths:
        if os.path.exists(path):
            db_path = path
            break
    
    if not db_path:
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ø—É—Ç—è—Ö: {db_paths}")
        return
    
    print(f"üìÅ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ë–î: {db_path}")
    
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute("PRAGMA table_info(projects)")
        columns = cursor.fetchall()
        existing_columns = [col[1] for col in columns]
        
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ –∫–æ–ª–æ–Ω–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ projects: {len(existing_columns)}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º start_date –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        if 'start_date' not in existing_columns:
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É start_date...")
            cursor.execute("""
                ALTER TABLE projects 
                ADD COLUMN start_date DATETIME DEFAULT (datetime('now'))
            """)
            print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ start_date –¥–æ–±–∞–≤–ª–µ–Ω–∞")
        else:
            print("‚ÑπÔ∏è –ö–æ–ª–æ–Ω–∫–∞ start_date —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
        # –î–æ–±–∞–≤–ª—è–µ–º planned_end_date –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        if 'planned_end_date' not in existing_columns:
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É planned_end_date...")
            cursor.execute("""
                ALTER TABLE projects 
                ADD COLUMN planned_end_date DATETIME DEFAULT (datetime('now', '+7 days'))
            """)
            print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ planned_end_date –¥–æ–±–∞–≤–ª–µ–Ω–∞")
        else:
            print("‚ÑπÔ∏è –ö–æ–ª–æ–Ω–∫–∞ planned_end_date —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
        # –î–æ–±–∞–≤–ª—è–µ–º actual_end_date –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        if 'actual_end_date' not in existing_columns:
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É actual_end_date...")
            cursor.execute("""
                ALTER TABLE projects 
                ADD COLUMN actual_end_date DATETIME
            """)
            print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ actual_end_date –¥–æ–±–∞–≤–ª–µ–Ω–∞")
        else:
            print("‚ÑπÔ∏è –ö–æ–ª–æ–Ω–∫–∞ actual_end_date —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏
        required_columns = {
            'prepayment_amount': 'REAL DEFAULT 0.0',
            'client_paid_total': 'REAL DEFAULT 0.0', 
            'executor_paid_total': 'REAL DEFAULT 0.0',
            'responsible_manager_id': 'INTEGER',
            'assigned_executor_id': 'INTEGER',
            'assigned_at': 'DATETIME'
        }
        
        for col_name, col_type in required_columns.items():
            if col_name not in existing_columns:
                print(f"‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É {col_name}...")
                cursor.execute(f"ALTER TABLE projects ADD COLUMN {col_name} {col_type}")
                print(f"‚úÖ –ö–æ–ª–æ–Ω–∫–∞ {col_name} –¥–æ–±–∞–≤–ª–µ–Ω–∞")
            else:
                print(f"‚ÑπÔ∏è –ö–æ–ª–æ–Ω–∫–∞ {col_name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute("PRAGMA table_info(projects)")
        final_columns = cursor.fetchall()
        print(f"üìã –ò—Ç–æ–≥–æ –∫–æ–ª–æ–Ω–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ projects: {len(final_columns)}")
        
    except Exception as e:
        conn.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        raise
    finally:
        conn.close()

def downgrade():
    """–û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ (–¥–ª—è SQLite —Å–ª–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å)"""
    print("‚ö†Ô∏è –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è SQLite –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è")
    print("–î–ª—è –æ—Ç–∫–∞—Ç–∞ —Å–æ–∑–¥–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –º–∏–≥—Ä–∞—Ü–∏–µ–π")

if __name__ == "__main__":
    upgrade()