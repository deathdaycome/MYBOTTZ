"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ—á—Ç–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∫ –∑–∞–¥–∞—á–∞–º
"""
import sqlite3
from pathlib import Path
import json

def run_migration():
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é"""
    db_path = Path("data/bot.db")

    if not db_path.exists():
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö {db_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False

    try:
        conn = sqlite3.connect(str(db_path))
        cursor = conn.cursor()

        print("üîÑ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π is_read –∏ read_by –≤ task_comments")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute("""
            SELECT name FROM sqlite_master
            WHERE type='table' AND name='task_comments'
        """)

        if not cursor.fetchone():
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ task_comments –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            conn.close()
            return False

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫
        cursor.execute("PRAGMA table_info(task_comments)")
        columns = [col[1] for col in cursor.fetchall()]

        # –î–æ–±–∞–≤–ª—è–µ–º is_read –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if 'is_read' not in columns:
            print("üìù –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É is_read...")
            cursor.execute("""
                ALTER TABLE task_comments
                ADD COLUMN is_read INTEGER DEFAULT 0
            """)
            print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ is_read –¥–æ–±–∞–≤–ª–µ–Ω–∞")
        else:
            print("‚ÑπÔ∏è  –ö–æ–ª–æ–Ω–∫–∞ is_read —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

        # –î–æ–±–∞–≤–ª—è–µ–º read_by –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if 'read_by' not in columns:
            print("üìù –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É read_by...")
            cursor.execute("""
                ALTER TABLE task_comments
                ADD COLUMN read_by TEXT DEFAULT '[]'
            """)
            print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ read_by –¥–æ–±–∞–≤–ª–µ–Ω–∞")
        else:
            print("‚ÑπÔ∏è  –ö–æ–ª–æ–Ω–∫–∞ read_by —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

        conn.commit()
        conn.close()

        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        if 'conn' in locals():
            conn.close()
        return False

if __name__ == "__main__":
    run_migration()
