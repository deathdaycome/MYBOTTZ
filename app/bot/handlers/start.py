from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler
from datetime import datetime

from ..keyboards.main import get_main_menu_keyboard, get_contacts_keyboard
from ...database.database import get_db_context, get_or_create_user, update_user_state
from ...database.models import Settings
from ...config.logging import get_logger, log_user_action

logger = get_logger(__name__)

class StartHandler:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è."""

    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        try:
            user = update.effective_user
            user_id = user.id
            
            # –ü–û–õ–ù–´–ô –°–ë–†–û–° –°–û–°–¢–û–Ø–ù–ò–Ø - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ–º ConversationHandler
            # –≠—Ç–æ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∫–Ω–æ–ø–∫–∏ "–°–æ–∑–¥–∞—Ç—å –¢–ó"
            context.user_data.clear()
            
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ ConversationHandler
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º ConversationHandler.END –¥–ª—è –ª—é–±—ã—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤
            conversation_ended = True
            
            log_user_action(user_id, "start_command", f"Username: {user.username}")
            
            with get_db_context() as db:
                db_user = get_or_create_user(
                    db=db,
                    telegram_id=user_id,
                    username=user.username,
                    first_name=user.first_name,
                    last_name=user.last_name
                )
                update_user_state(db, user_id, "main_menu")
                
                # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ (—Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫)
                welcome_text = f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ BotDev Studio!"
                company_name = "BotDev Studio"
                
                try:
                    welcome_setting = db.query(Settings).filter(Settings.key == "welcome_message").first()
                    company_name_setting = db.query(Settings).filter(Settings.key == "company_name").first()
                    
                    if welcome_setting and welcome_setting.value:
                        welcome_text = welcome_setting.value
                    if company_name_setting and company_name_setting.value:
                        company_name = company_name_setting.value
                except Exception as e:
                    logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ë–î: {e}")
            
            user_name = user.first_name or user.username or "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
            
            full_message = f"""
{welcome_text}

–ü—Ä–∏–≤–µ—Ç, {user_name}! 

ü§ñ –Ø - –±–æ—Ç-–≤–∏–∑–∏—Ç–∫–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –±–æ—Ç–æ–≤ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏. –ü–æ–º–æ–≥—É –≤–∞–º:

‚úÖ <b>–°–æ–∑–¥–∞—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ</b> –¥–ª—è –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
‚úÖ <b>–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å</b> —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
‚úÖ <b>–û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã</b> —á–µ—Ä–µ–∑ AI-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞
‚úÖ <b>–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ</b> –≥–æ—Ç–æ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏–π
‚úÖ <b>–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é</b> —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º

üöÄ <b>–ß—Ç–æ –¥–µ–ª–∞–µ–º:</b>
‚Ä¢ Telegram –∏ WhatsApp –±–æ—Ç—ã
‚Ä¢ –í–µ–±-—á–∞—Ç–±–æ—Ç—ã –¥–ª—è —Å–∞–π—Ç–æ–≤
‚Ä¢ CRM –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –±–∏–∑–Ω–µ—Å–∞
‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏
‚Ä¢ AI-—Ä–µ—à–µ–Ω–∏—è –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞

–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –≤ –º–µ–Ω—é –Ω–∏–∂–µ! üëá
            """
            
            keyboard = get_main_menu_keyboard()
            
            if update.message:
                await update.message.reply_text(
                    full_message,
                    reply_markup=keyboard,
                    parse_mode='HTML'
                )
            elif update.callback_query:
                await update.callback_query.edit_message_text(
                    full_message,
                    reply_markup=keyboard,
                    parse_mode='HTML'
                )
            
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} ({user.username}) –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ start: {e}")
            if update.message:
                await update.message.reply_text(
                    "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.",
                    reply_markup=get_main_menu_keyboard()
                )

    async def help(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        try:
            user_id = update.effective_user.id
            log_user_action(user_id, "help_command")
            
            help_text = """
üÜò <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/menu - –ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/cancel - –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ

<b>–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</b>
‚Ä¢ –ù–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: @your_support
‚Ä¢ Email: support@botdev.studio
            """
            
            keyboard = get_main_menu_keyboard()
            
            await update.message.reply_text(
                help_text,
                reply_markup=keyboard,
                parse_mode='HTML'
            )
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ help: {e}")
            await update.message.reply_text(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø—Ä–∞–≤–∫–∏.",
                reply_markup=get_main_menu_keyboard()
            )

    async def menu(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /menu"""
        try:
            user_id = update.effective_user.id
            log_user_action(user_id, "menu_command")
            
            with get_db_context() as db:
                update_user_state(db, user_id, "main_menu")
            
            menu_text = "üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:"
            
            keyboard = get_main_menu_keyboard()
            
            await update.message.reply_text(
                menu_text,
                reply_markup=keyboard,
                parse_mode='HTML'
            )
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ menu: {e}")
            await update.message.reply_text(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ–Ω—é.",
                reply_markup=get_main_menu_keyboard()
            )

    async def cancel(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /cancel. –ó–∞–≤–µ—Ä—à–∞–µ—Ç –ª—é–±–æ–π ConversationHandler."""
        try:
            user = update.effective_user
            log_user_action(user.id, "cancel_command")
            
            with get_db_context() as db:
                update_user_state(db, user.id, "main_menu")
            
            context.user_data.clear()
            
            cancel_text = "–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."
            keyboard = get_main_menu_keyboard()
            
            if update.callback_query:
                await update.callback_query.edit_message_text(
                    cancel_text,
                    reply_markup=keyboard,
                    parse_mode='HTML'
                )
            else:
                await update.message.reply_text(
                    cancel_text,
                    reply_markup=keyboard,
                    parse_mode='HTML'
                )
            
            return ConversationHandler.END
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ cancel: {e}")
            return ConversationHandler.END

    async def show_contacts(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"""
        try:
            query = update.callback_query
            await query.answer()
            
            user_id = update.effective_user.id
            log_user_action(user_id, "show_contacts")
            
            contacts_text = """
üìû <b>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>

<b>–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ª—é–±—ã–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º:</b>

‚Ä¢ <b>Telegram:</b> @your_telegram_contact
‚Ä¢ <b>WhatsApp:</b> +7 (999) 123-45-67
‚Ä¢ <b>Email:</b> info@botdev.studio
‚Ä¢ <b>–°–∞–π—Ç:</b> botdev.studio

–ú—ã –Ω–∞ —Å–≤—è–∑–∏ —Å 9:00 –¥–æ 18:00 (–ú–°–ö) –≤ –±—É–¥–Ω–∏–µ –¥–Ω–∏.
            """
            
            keyboard = get_contacts_keyboard()
            
            await query.edit_message_text(
                text=contacts_text,
                reply_markup=keyboard,
                parse_mode='HTML'
            )
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ show_contacts: {e}")

    async def button_callback(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏."""
        query = update.callback_query
        await query.answer()

        # –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
        if query.data == 'main_menu':
            await self.start(update, context)
        elif query.data == 'contacts':
            await self.show_contacts(update, context)
        # –î—Ä—É–≥–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –±—É–¥—É—Ç –≤—ã–∑–≤–∞–Ω—ã –ø–æ —Å–≤–æ–∏–º –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º
        # (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'create_tz', 'portfolio' –∏ —Ç.–¥.)

# –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —á–∞—Å—Ç—è—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
start_handler = StartHandler()