#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π Avito
"""

import sys
import os
import asyncio
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ Python path
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

async def test_notifications():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è Avito"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    from app.config.settings import settings
    
    print("=== –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò ===")
    print(f"BOT_TOKEN: {'***' + settings.BOT_TOKEN[-4:] if settings.BOT_TOKEN else '–ù–ï –ó–ê–î–ê–ù'}")
    print(f"ADMIN_CHAT_ID: {settings.ADMIN_CHAT_ID if settings.ADMIN_CHAT_ID else '–ù–ï –ó–ê–î–ê–ù'}")
    print(f"OPENROUTER_API_KEY: {'***' + settings.OPENROUTER_API_KEY[-4:] if settings.OPENROUTER_API_KEY else '–ù–ï –ó–ê–î–ê–ù'}")
    
    if not settings.BOT_TOKEN:
        print("‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return
        
    if not settings.ADMIN_CHAT_ID:
        print("‚ùå ADMIN_CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    print("\n=== –¢–ï–°–¢ –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø ===")
    try:
        from app.services.notification_service import NotificationService
        from telegram import Bot
        
        # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
        bot = Bot(token=settings.BOT_TOKEN)
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        notification_service = NotificationService()
        notification_service.set_bot(bot)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        test_message = """
üß™ <b>–¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π Avito</b>

–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –≤ Avito.

üîß –ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!
        """
        
        result = await notification_service.send_admin_notification(test_message.strip())
        
        if result:
            print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Avito polling —Å–µ—Ä–≤–∏—Å
    print("\n=== –¢–ï–°–¢ AVITO POLLING ===")
    try:
        from app.services.avito_polling_service import polling_service
        
        print(f"Polling –∞–∫—Ç–∏–≤–µ–Ω: {polling_service.polling_active}")
        print(f"–ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—ã –≤–∫–ª—é—á–µ–Ω—ã: {polling_service.auto_response_enabled}")
        print(f"–ò–∑–≤–µ—Å—Ç–Ω—ã—Ö —á–∞—Ç–æ–≤: {len(polling_service.known_messages)}")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º Avito —Å–µ—Ä–≤–∏—Å
        from app.services.avito_service import get_avito_service
        avito_service = await get_avito_service()
        
        if avito_service:
            print("‚úÖ Avito —Å–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω")
            
            # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —á–∞—Ç—ã
            try:
                chats = await avito_service.get_chats()
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —á–∞—Ç–æ–≤: {len(chats) if chats else 0}")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —á–∞—Ç–æ–≤: {e}")
        else:
            print("‚ùå Avito —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ polling: {e}")
    
    print("\n=== –ö–û–ù–ï–¶ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø ===")

def main():
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π Avito...")
    print("=" * 50)
    
    try:
        asyncio.run(test_notifications())
    except KeyboardInterrupt:
        print("\nüëã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")

if __name__ == "__main__":
    main()