#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü CRM —Å–∏—Å—Ç–µ–º—ã
–î–∞—Ç–∞: 2025-10-12
–û–ø–∏—Å–∞–Ω–∏–µ: –°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—ã clients, leads, deals, documents –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–∏–º–∏ –¥–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π CRM —Å–∏—Å—Ç–µ–º—ã
"""

import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PATH
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from sqlalchemy import create_engine
from app.database.crm_models import Base, Client, Lead, Deal, ClientTag, ServiceCatalog, Document, DocumentTemplate
from app.database.models import Base as MainBase

def run_migration():
    """–ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏"""
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ë–î (data/bot.db –¥–ª—è –∞–¥–º–∏–Ω–∫–∏ –∏ –±–æ—Ç–∞)
    db_path = os.environ.get("DATABASE_PATH")
    if not db_path:
        db_path = os.path.join(os.path.dirname(os.path.dirname(os.path.abspath(__file__))), "data", "bot.db")

    if not os.path.exists(db_path):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {db_path}")
        return False

    print(f"üîÑ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è {db_path}")

    try:
        # –°–æ–∑–¥–∞–µ–º –¥–≤–∏–∂–æ–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î
        engine = create_engine(f'sqlite:///{db_path}')

        # –°–æ–∑–¥–∞–µ–º –≤—Å–µ CRM —Ç–∞–±–ª–∏—Ü—ã
        print("üìù –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã CRM —Å–∏—Å—Ç–µ–º—ã...")
        Base.metadata.create_all(engine)

        print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã:")
        print("  - clients (–ö–ª–∏–µ–Ω—Ç—ã)")
        print("  - leads (–õ–∏–¥—ã)")
        print("  - deals (–°–¥–µ–ª–∫–∏)")
        print("  - client_tag (–¢–µ–≥–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤)")
        print("  - client_tags (–°–≤—è–∑—å –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ —Ç–µ–≥–æ–≤)")
        print("  - service_catalog (–ö–∞—Ç–∞–ª–æ–≥ —É—Å–ª—É–≥)")
        print("  - deal_services (–°–≤—è–∑—å —Å–¥–µ–ª–æ–∫ –∏ —É—Å–ª—É–≥)")
        print("  - documents (–î–æ–∫—É–º–µ–Ω—Ç—ã)")
        print("  - document_templates (–®–∞–±–ª–æ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤)")

        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = run_migration()
    sys.exit(0 if success else 1)
