#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∞–≤–æ–∫
"""
import asyncio
from app.bot.keyboards.main import get_project_actions_keyboard, get_project_revisions_keyboard
from app.database.database import get_db_context
from app.database.models import Project, ProjectRevision, User

def test_keyboards():
    """–¢–µ—Å—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä"""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä...")
    
    # –¢–µ—Å—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–µ–π—Å—Ç–≤–∏–π –ø—Ä–æ–µ–∫—Ç–∞
    keyboard = get_project_actions_keyboard(3)
    print("‚å®Ô∏è –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π –ø—Ä–æ–µ–∫—Ç–∞:")
    for row in keyboard.inline_keyboard:
        for button in row:
            print(f"  - {button.text} -> {button.callback_data}")
    
    # –¢–µ—Å—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø—Ä–∞–≤–æ–∫
    keyboard_revisions = get_project_revisions_keyboard(3, 1)
    print("\n‚å®Ô∏è –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–∞–≤–æ–∫:")
    for row in keyboard_revisions.inline_keyboard:
        for button in row:
            print(f"  - {button.text} -> {button.callback_data}")

def test_database():
    """–¢–µ—Å—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ"""
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ...")
    
    with get_db_context() as db:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = db.query(User).filter(User.id == 3).first()
        if user:
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {user.username}")
        else:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–µ–∫—Ç
        project = db.query(Project).filter(Project.id == 3).first()
        if project:
            print(f"üìã –ü—Ä–æ–µ–∫—Ç –Ω–∞–π–¥–µ–Ω: {project.title}")
            print(f"üìä –°—Ç–∞—Ç—É—Å: {project.status}")
        else:
            print("‚ùå –ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∫–∏
        revisions = db.query(ProjectRevision).filter(ProjectRevision.project_id == 3).all()
        print(f"üìù –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∞–≤–æ–∫: {len(revisions)}")
        for revision in revisions:
            print(f"  - #{revision.revision_number}: {revision.title} ({revision.status})")

def main():
    print("üöÄ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∞–≤–æ–∫...")
    test_keyboards()
    test_database()
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")

if __name__ == "__main__":
    main()