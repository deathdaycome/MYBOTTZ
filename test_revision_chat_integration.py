#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —á–∞—Ç–∞ –ø—Ä–∞–≤–æ–∫
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database.database import get_db_context
from app.database.models import ProjectRevision, RevisionMessage, User, Project
from app.bot.handlers.revisions import RevisionsHandler

async def test_revision_chat_integration():
    """–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —á–∞—Ç–∞ –ø—Ä–∞–≤–æ–∫"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —á–∞—Ç–∞ –ø—Ä–∞–≤–æ–∫...")
    
    try:
        with get_db_context() as db:
            # –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ø—Ä–∞–≤–∫—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            revision = db.query(ProjectRevision).first()
            
            if not revision:
                print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø—Ä–∞–≤–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
                return False
                
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –ø—Ä–∞–≤–∫–∞ #{revision.revision_number}: {revision.title}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ
            messages = db.query(RevisionMessage).filter(
                RevisionMessage.revision_id == revision.id
            ).all()
            
            print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ")
            
            for msg in messages:
                print(f"  üìù {msg.sender_type}: {msg.message[:50]}...")
                
            print("‚úÖ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —á–∞—Ç–∞ –ø—Ä–∞–≤–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    success = await test_revision_chat_integration()
    
    if success:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìã –ß—Ç–æ –±—ã–ª–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ:")
        print("‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–∞–≤–∫–∏")
        print("‚úÖ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞, –æ–ø–∏—Å–∞–Ω–∏—è –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –ø—Ä–∞–≤–∫–∏")
        print("‚úÖ –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ) –∫ —Å–æ–æ–±—â–µ–Ω–∏—é")
        print("‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è (–∫–ª–∏–µ–Ω—Ç–∞)")
        
        print("\nüîß –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:")
        print("1. –ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–µ—Ç –ø—Ä–∞–≤–∫—É —á–µ—Ä–µ–∑ –±–æ—Ç–∞")
        print("2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏")
        print("3. –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∞–≤–∫–µ –∏ —Ñ–∞–π–ª—ã")
        print("4. –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç —Å—Ä–∞–∑—É –≤–∏–¥–µ—Ç—å –¥–µ—Ç–∞–ª–∏ –∏ –æ—Ç–≤–µ—á–∞—Ç—å")
        
    else:
        print("\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–æ")

if __name__ == "__main__":
    asyncio.run(main())