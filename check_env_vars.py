#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Avito –∏ Telegram
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ Python path
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

def check_env_vars():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø")
    print("=" * 50)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    try:
        from app.config.settings import settings
        print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        return
    
    # –°–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    env_vars = [
        ('BOT_TOKEN', settings.BOT_TOKEN, '–¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞'),
        ('ADMIN_CHAT_ID', settings.ADMIN_CHAT_ID, 'ID —á–∞—Ç–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π'),
        ('OPENROUTER_API_KEY', settings.OPENROUTER_API_KEY, '–ö–ª—é—á OpenRouter –¥–ª—è AI'),
        ('NOTIFICATION_CHAT_ID', os.getenv("NOTIFICATION_CHAT_ID", ""), '–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π ID —á–∞—Ç–∞'),
    ]
    
    print("\nüìã –°–¢–ê–¢–£–° –ü–ï–†–ï–ú–ï–ù–ù–´–•:")
    for var_name, var_value, description in env_vars:
        if var_value:
            if 'TOKEN' in var_name or 'KEY' in var_name:
                masked_value = '***' + str(var_value)[-4:] if len(str(var_value)) > 4 else '***'
                print(f"‚úÖ {var_name}: {masked_value} - {description}")
            else:
                print(f"‚úÖ {var_name}: {var_value} - {description}")
        else:
            print(f"‚ùå {var_name}: –ù–ï –ó–ê–î–ê–ù - {description}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
    env_file = project_root / '.env'
    print(f"\nüìÅ –§–ê–ô–õ .env: {'—Å—É—â–µ—Å—Ç–≤—É–µ—Ç' if env_file.exists() else '–ù–ï –ù–ê–ô–î–ï–ù'}")
    
    if env_file.exists():
        print("üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ .env (–±–µ–∑ —Å–µ–∫—Ä–µ—Ç–æ–≤):")
        try:
            with open(env_file, 'r') as f:
                lines = f.readlines()
                for line in lines:
                    line = line.strip()
                    if line and not line.startswith('#'):
                        if '=' in line:
                            key, value = line.split('=', 1)
                            if 'TOKEN' in key or 'KEY' in key or 'SECRET' in key:
                                print(f"  {key}=***")
                            else:
                                print(f"  {line}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è .env: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print(f"\nüñ•Ô∏è –°–ò–°–¢–ï–ú–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï:")
    system_vars = ['BOT_TOKEN', 'ADMIN_CHAT_ID', 'NOTIFICATION_CHAT_ID', 'OPENROUTER_API_KEY']
    for var in system_vars:
        sys_value = os.environ.get(var)
        if sys_value:
            if 'TOKEN' in var or 'KEY' in var:
                masked = '***' + sys_value[-4:] if len(sys_value) > 4 else '***'
                print(f"‚úÖ {var}: {masked} (—Å–∏—Å—Ç–µ–º–Ω–∞—è)")
            else:
                print(f"‚úÖ {var}: {sys_value} (—Å–∏—Å—Ç–µ–º–Ω–∞—è)")
        else:
            print(f"‚ùå {var}: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ (—Å–∏—Å—Ç–µ–º–Ω–∞—è)")
    
    print(f"\nüìä –ò–¢–û–ì–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê:")
    critical_missing = []
    
    if not settings.BOT_TOKEN:
        critical_missing.append("BOT_TOKEN")
    if not settings.ADMIN_CHAT_ID:
        critical_missing.append("ADMIN_CHAT_ID")
    if not settings.OPENROUTER_API_KEY:
        critical_missing.append("OPENROUTER_API_KEY")
    
    if critical_missing:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ –∑–∞–¥–∞–Ω—ã: {', '.join(critical_missing)}")
        print("üîß U–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—ã —Ä–∞–±–æ—Ç–∞—Ç—å –ù–ï –ë–£–î–£–¢!")
    else:
        print("‚úÖ –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω—ã")
        print("üöÄ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—ã –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å!")

if __name__ == "__main__":
    check_env_vars()