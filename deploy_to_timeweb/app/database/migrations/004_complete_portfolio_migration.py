#!/usr/bin/env python3
"""
–ü–æ–ª–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã portfolio - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –ø–æ–ª–µ–π
"""

import sqlite3
import os
from pathlib import Path

def run_migration():
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü—ã portfolio"""
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ 
    project_root = Path(__file__).parent.parent.parent.parent
    db_path = project_root / "data" / "bot.db"
    
    print(f"üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é —Ç–∞–±–ª–∏—Ü—ã portfolio: {db_path}")
    
    if not db_path.exists():
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.")
        return False
    
    try:
        conn = sqlite3.connect(str(db_path))
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute("PRAGMA table_info(portfolio)")
        columns = [column[1] for column in cursor.fetchall()]
        print(f"üìã –¢–µ–∫—É—â–∏–µ –ø–æ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ portfolio: {columns}")
        
        # –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ —Ç–∞–±–ª–∏—Ü–µ
        required_fields = [
            ('subtitle', 'VARCHAR(500)'),
            ('main_image', 'VARCHAR(500)'),
            ('image_paths', 'TEXT'),
            ('complexity_level', 'INTEGER DEFAULT 5'),
            ('cost_range', 'VARCHAR(100)'),
            ('show_cost', 'BOOLEAN DEFAULT 0'),
            ('demo_link', 'VARCHAR(500)'),
            ('repository_link', 'VARCHAR(500)'),
            ('external_links', 'TEXT'),
            ('is_featured', 'BOOLEAN DEFAULT 0'),
            ('is_visible', 'BOOLEAN DEFAULT 1'),
            ('sort_order', 'INTEGER DEFAULT 0'),
            ('views_count', 'INTEGER DEFAULT 0'),
            ('likes_count', 'INTEGER DEFAULT 0'),
            ('tags', 'TEXT'),
            ('client_name', 'VARCHAR(200)'),
            ('project_status', 'VARCHAR(50) DEFAULT "completed"'),
            ('completed_at', 'DATETIME'),
            ('created_by', 'INTEGER')
        ]
        
        missing_fields = []
        for field_name, field_type in required_fields:
            if field_name not in columns:
                missing_fields.append((field_name, field_type))
        
        if missing_fields:
            print(f"‚ûï –ù–∞–π–¥–µ–Ω–æ {len(missing_fields)} –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –ø–æ–ª–µ–π:")
            for field_name, field_type in missing_fields:
                print(f"   - {field_name}")
                try:
                    cursor.execute(f"ALTER TABLE portfolio ADD COLUMN {field_name} {field_type}")
                    print(f"   ‚úÖ –ü–æ–ª–µ '{field_name}' –¥–æ–±–∞–≤–ª–µ–Ω–æ")
                except Exception as e:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ '{field_name}': {e}")
            
            conn.commit()
        else:
            print("‚úÖ –í—Å–µ –ø–æ–ª—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        cursor.execute("PRAGMA table_info(portfolio)")
        final_columns = [column[1] for column in cursor.fetchall()]
        print(f"üìã –ò—Ç–æ–≥–æ–≤—ã–µ –ø–æ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ portfolio ({len(final_columns)}): {final_columns}")
        
        conn.close()
        print("üéâ –ü–æ–ª–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        return False

if __name__ == "__main__":
    run_migration()
