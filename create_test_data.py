#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ –ø—Ä–∞–≤–æ–∫
"""
import sys
import os
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app.database.database import get_db_context
from app.database.models import Project, ProjectRevision, User

def create_test_data():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –∏ –ø—Ä–∞–≤–∫–∏"""

    with get_db_context() as db:
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = db.query(User).first()
        if not user:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å.")
            return

        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username} (ID: {user.id})")

        # –¢–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–æ–µ–∫—Ç—ã
        test_projects = [
            {
                "title": "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏",
                "description": "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º, –∫–æ—Ä–∑–∏–Ω–æ–π –∏ –æ–ø–ª–∞—Ç–æ–π",
                "project_type": "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω",
                "status": "in_progress",
                "estimated_cost": 250000.0,
                "complexity": "high",
            },
            {
                "title": "–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –µ–¥—ã",
                "description": "iOS –∏ Android –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∑–∞–∫–∞–∑–∞ –µ–¥—ã –∏–∑ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ —Å —Ç—Ä–µ–∫–∏–Ω–≥–æ–º –∫—É—Ä—å–µ—Ä–∞",
                "project_type": "–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
                "status": "in_progress",
                "estimated_cost": 450000.0,
                "complexity": "high",
            },
            {
                "title": "CRM —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è —Å–∞–ª–æ–Ω–∞ –∫—Ä–∞—Å–æ—Ç—ã",
                "description": "–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å—è–º–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤, —Å–∫–ª–∞–¥–æ–º –∏ –∑–∞—Ä–ø–ª–∞—Ç–∞–º–∏",
                "project_type": "–í–µ–±-—Å–µ—Ä–≤–∏—Å",
                "status": "testing",
                "estimated_cost": 180000.0,
                "complexity": "medium",
            },
        ]

        # –¢–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–∞–≤–∫–∏
        test_revisions = [
            {
                "title": "–ò—Å–ø—Ä–∞–≤–∏—Ç—å –±–∞–≥ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π",
                "description": "–ü—Ä–∏ –≤—Ö–æ–¥–µ —á–µ—Ä–µ–∑ Telegram –∏–Ω–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑—É–µ—Ç—Å—è. –ù—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–æ–∫–µ–Ω–∞.",
                "status": "in_progress",
                "priority": "high",
                "progress": 65,
                "time_spent_seconds": 3600,
            },
            {
                "title": "–î–æ–±–∞–≤–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é email",
                "description": "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Ñ–æ—Ä–º–∞—Ç–∞ email –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.",
                "status": "pending",
                "priority": "normal",
                "progress": 0,
                "time_spent_seconds": 0,
            },
            {
                "title": "–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã –∫ –ë–î",
                "description": "–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø—Ä–æ–µ–∫—Ç–æ–≤ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –º–µ–¥–ª–µ–Ω–Ω–æ. –ù—É–∂–Ω–æ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã –∏ –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω–¥–µ–∫—Å—ã.",
                "status": "completed",
                "priority": "normal",
                "progress": 100,
                "time_spent_seconds": 7200,
                "completed_at": datetime.utcnow() - timedelta(days=1),
            },
            {
                "title": "–£–ª—É—á—à–∏—Ç—å –¥–∏–∑–∞–π–Ω –∫–Ω–æ–ø–æ–∫",
                "description": "–ö–Ω–æ–ø–∫–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤—ã–≥–ª—è–¥—è—Ç –Ω–µ –æ—á–µ–Ω—å –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ. –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã –∏ –∞–Ω–∏–º–∞—Ü–∏–∏.",
                "status": "in_progress",
                "priority": "low",
                "progress": 40,
                "time_spent_seconds": 1800,
            },
            {
                "title": "–°–†–û–ß–ù–û: –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∫—Ä–∏—Ç. –æ—à–∏–±–∫—É –æ–ø–ª–∞—Ç—ã",
                "description": "–ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ—Å—Ç–∞–ª–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –æ–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ Stripe. –ö–ª–∏–µ–Ω—Ç—ã –∂–∞–ª—É—é—Ç—Å—è!",
                "status": "in_progress",
                "priority": "urgent",
                "progress": 85,
                "time_spent_seconds": 5400,
            },
        ]

        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã
        projects_created = 0
        existing_projects = db.query(Project).filter(Project.user_id == user.id).all()

        if len(existing_projects) == 0:
            print("\nüìÇ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤...")

            for proj_data in test_projects:
                project = Project(
                    user_id=user.id,
                    title=proj_data["title"],
                    description=proj_data["description"],
                    project_type=proj_data["project_type"],
                    status=proj_data["status"],
                    estimated_cost=proj_data["estimated_cost"],
                    complexity=proj_data["complexity"],
                    start_date=datetime.utcnow(),
                    planned_end_date=datetime.utcnow() + timedelta(days=30),  # –ü–ª–∞–Ω–æ–≤–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 30 –¥–Ω–µ–π
                )
                db.add(project)
                projects_created += 1
                print(f"  ‚úÖ {proj_data['title']}")

            db.commit()
            print(f"\n‚úÖ –°–æ–∑–¥–∞–Ω–æ {projects_created} –ø—Ä–æ–µ–∫—Ç–æ–≤!")

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
            existing_projects = db.query(Project).filter(Project.user_id == user.id).all()
        else:
            print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(existing_projects)} —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤")

        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
        revisions_created = 0
        print("\nüìù –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–æ–∫ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤...")

        for project in existing_projects[:3]:
            print(f"\nüìÇ –ü—Ä–æ–µ–∫—Ç: {project.title}")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø—Ä–∞–≤–∫–∏
            existing_revisions = db.query(ProjectRevision).filter(
                ProjectRevision.project_id == project.id
            ).count()

            if existing_revisions > 0:
                print(f"  ‚ÑπÔ∏è  –£–∂–µ –µ—Å—Ç—å {existing_revisions} –ø—Ä–∞–≤–æ–∫, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...")
                continue

            # –°–æ–∑–¥–∞–µ–º –ø–æ 3 –ø—Ä–∞–≤–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
            for i, rev_data in enumerate(test_revisions[:3], 1):
                revision = ProjectRevision(
                    project_id=project.id,
                    revision_number=i,
                    title=rev_data["title"],
                    description=rev_data["description"],
                    status=rev_data["status"],
                    priority=rev_data["priority"],
                    progress=rev_data["progress"],
                    time_spent_seconds=rev_data["time_spent_seconds"],
                    created_by_id=user.id,
                    completed_at=rev_data.get("completed_at"),
                )

                db.add(revision)
                revisions_created += 1

                status_emoji = {
                    "pending": "‚è≥",
                    "in_progress": "‚öôÔ∏è",
                    "completed": "‚úÖ",
                    "rejected": "‚ùå",
                }

                priority_emoji = {
                    "low": "üîµ",
                    "normal": "üü¢",
                    "high": "üü°",
                    "urgent": "üî¥",
                }

                print(f"  {status_emoji.get(rev_data['status'], '‚ùì')} {priority_emoji.get(rev_data['priority'], '‚ö™')} #{i}: {rev_data['title']}")

        if revisions_created > 0 or projects_created > 0:
            db.commit()
            print(f"\n‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ:")
            print(f"   üìÇ –ü—Ä–æ–µ–∫—Ç–æ–≤: {projects_created}")
            print(f"   üìù –ü—Ä–∞–≤–æ–∫: {revisions_created}")
            print("\nüéâ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å Mini App –∏ —É–≤–∏–¥–µ—Ç—å –¥–∞–Ω–Ω—ã–µ:")
            print("   http://localhost:5173/projects - –°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤")
            print("   http://localhost:5173/revisions - –í—Å–µ –ø—Ä–∞–≤–∫–∏")
        else:
            print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É–∂–µ —Å–æ–∑–¥–∞–Ω—ã!")


if __name__ == "__main__":
    print("=" * 70)
    print("üõ†Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–ø—Ä–æ–µ–∫—Ç—ã + –ø—Ä–∞–≤–∫–∏)")
    print("=" * 70)

    try:
        create_test_data()
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

    print("\n" + "=" * 70)
