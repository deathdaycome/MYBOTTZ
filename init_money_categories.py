#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤
"""

from app.database.database import get_db_context
from app.database.models import MoneyCategory, AdminUser

def init_money_categories():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π"""
    
    # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤
    income_categories = [
        {"name": "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –±–æ—Ç–æ–≤", "color": "#28a745", "icon": "fas fa-robot", "sort_order": 1},
        {"name": "–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", "color": "#007bff", "icon": "fas fa-code", "sort_order": 2},
        {"name": "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏", "color": "#17a2b8", "icon": "fas fa-handshake", "sort_order": 3},
        {"name": "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏", "color": "#6610f2", "icon": "fas fa-plug", "sort_order": 4},
        {"name": "–ü–æ–¥–¥–µ—Ä–∂–∫–∞", "color": "#fd7e14", "icon": "fas fa-tools", "sort_order": 5},
        {"name": "–û–±—É—á–µ–Ω–∏–µ", "color": "#20c997", "icon": "fas fa-graduation-cap", "sort_order": 6},
        {"name": "–ü—Ä–æ—á–∏–µ –¥–æ—Ö–æ–¥—ã", "color": "#6c757d", "icon": "fas fa-plus-circle", "sort_order": 99}
    ]
    
    # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤
    expense_categories = [
        {"name": "–ï–¥–∞", "color": "#dc3545", "icon": "fas fa-utensils", "sort_order": 1},
        {"name": "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç", "color": "#ffc107", "icon": "fas fa-car", "sort_order": 2},
        {"name": "–ñ–∏–ª—å–µ", "color": "#8B4513", "icon": "fas fa-home", "sort_order": 3},
        {"name": "–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏", "color": "#6f42c1", "icon": "fas fa-bolt", "sort_order": 4},
        {"name": "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç", "color": "#0dcaf0", "icon": "fas fa-wifi", "sort_order": 5},
        {"name": "–°–æ—Ñ—Ç –∏ –ø–æ–¥–ø–∏—Å–∫–∏", "color": "#6610f2", "icon": "fas fa-laptop", "sort_order": 6},
        {"name": "–•–æ—Å—Ç–∏–Ω–≥", "color": "#198754", "icon": "fas fa-server", "sort_order": 7},
        {"name": "–†–µ–∫–ª–∞–º–∞", "color": "#fd7e14", "icon": "fas fa-bullhorn", "sort_order": 8},
        {"name": "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", "color": "#20c997", "icon": "fas fa-book", "sort_order": 9},
        {"name": "–ó–¥–æ—Ä–æ–≤—å–µ", "color": "#dc3545", "icon": "fas fa-heartbeat", "sort_order": 10},
        {"name": "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "color": "#e83e8c", "icon": "fas fa-gamepad", "sort_order": 11},
        {"name": "–û–¥–µ–∂–¥–∞", "color": "#795548", "icon": "fas fa-tshirt", "sort_order": 12},
        {"name": "–ù–∞–ª–æ–≥–∏", "color": "#343a40", "icon": "fas fa-file-invoice-dollar", "sort_order": 13},
        {"name": "–ü—Ä–æ—á–∏–µ —Ä–∞—Å—Ö–æ–¥—ã", "color": "#6c757d", "icon": "fas fa-minus-circle", "sort_order": 99}
    ]
    
    with get_db_context() as db:
        # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞
        admin_user = db.query(AdminUser).filter(AdminUser.username == "admin").first()
        
        if not admin_user:
            print("–°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
            admin_user = AdminUser(
                username="admin",
                password_hash="dummy_hash",  # –ó–∞–≥–ª—É—à–∫–∞
                role="owner",
                is_active=True
            )
            db.add(admin_user)
            db.commit()
            db.refresh(admin_user)
        
        print(f"–ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–¥–º–∏–Ω–∞: {admin_user.username} (ID: {admin_user.id})")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤
        print("–î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤...")
        for cat_data in income_categories:
            existing = db.query(MoneyCategory).filter(
                MoneyCategory.name == cat_data["name"],
                MoneyCategory.type == "income"
            ).first()
            
            if not existing:
                category = MoneyCategory(
                    name=cat_data["name"],
                    type="income",
                    color=cat_data["color"],
                    icon=cat_data["icon"],
                    sort_order=cat_data["sort_order"],
                    created_by_id=admin_user.id
                )
                db.add(category)
                print(f"  ‚úÖ {cat_data['name']}")
            else:
                print(f"  ‚è≠Ô∏è {cat_data['name']} (—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤
        print("–î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤...")
        for cat_data in expense_categories:
            existing = db.query(MoneyCategory).filter(
                MoneyCategory.name == cat_data["name"],
                MoneyCategory.type == "expense"
            ).first()
            
            if not existing:
                category = MoneyCategory(
                    name=cat_data["name"],
                    type="expense",
                    color=cat_data["color"],
                    icon=cat_data["icon"],
                    sort_order=cat_data["sort_order"],
                    created_by_id=admin_user.id
                )
                db.add(category)
                print(f"  ‚úÖ {cat_data['name']}")
            else:
                print(f"  ‚è≠Ô∏è {cat_data['name']} (—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)")
        
        db.commit()
        print("‚úÖ –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã!")


if __name__ == "__main__":
    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤...")
    init_money_categories()
    print("üéâ –ì–æ—Ç–æ–≤–æ!")