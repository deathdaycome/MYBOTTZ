version: '3.8'

services:
  telegram-bot:
    build: .
    container_name: telegram-bot-business-card
    restart: unless-stopped
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./.env:/app/.env:ro
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - redis
    networks:
      - bot-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  admin-panel:
    build: .
    container_name: admin-panel-business-card
    restart: unless-stopped
    command: uvicorn app.admin.app:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./.env:/app/.env:ro
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - redis
    networks:
      - bot-network

  redis:
    image: redis:7-alpine
    container_name: redis-business-card
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bot-network
    command: redis-server --appendonly yes

  nginx:
    image: nginx:alpine
    container_name: nginx-business-card
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - admin-panel
    networks:
      - bot-network

volumes:
  redis_data:

networks:
  bot-network:
    driver: bridge