#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ telegram_id –≤ admin_users
"""

import sqlite3
import os
import sys

def fix_server_database():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
    
    # –ü—É—Ç–∏ –∫ –≤–æ–∑–º–æ–∂–Ω—ã–º –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö
    db_paths = [
        "/var/www/bot_business_card/data/bot.db",  # –û—Å–Ω–æ–≤–Ω–∞—è –±–∞–∑–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
        "/var/www/bot_business_card/admin_panel.db",
        "/var/www/bot_business_card/database.db", 
        "/var/www/bot_business_card/app.db",
        "/var/www/bot_business_card/data/database.db",
        "data/bot.db",
        "admin_panel.db",
        "database.db",
        "app.db"
    ]
    
    print("üîç –ò—â–µ–º –≤—Å–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –±–∞–∑—ã
    existing_dbs = []
    for path in db_paths:
        if os.path.exists(path):
            existing_dbs.append(path)
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –±–∞–∑–∞: {path}")
    
    if not existing_dbs:
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –±–∞–∑—É
    for db_path in existing_dbs:
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É: {db_path}")
        try:
            conn = sqlite3.connect(db_path)
            cursor = conn.cursor()
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü
            cursor.execute("SELECT name FROM sqlite_master WHERE type='table'")
            tables = [table[0] for table in cursor.fetchall()]
            print(f"üìã –¢–∞–±–ª–∏—Ü—ã –≤ {db_path}: {tables}")
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–∞–±–ª–∏—Ü–∞ admin_users, –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –µ—ë
            if 'admin_users' in tables:
                print(f"üéØ –†–∞–±–æ—Ç–∞–µ–º —Å —Ç–∞–±–ª–∏—Ü–µ–π admin_users –≤ {db_path}")
                
                cursor.execute("PRAGMA table_info(admin_users)")
                columns = [column[1] for column in cursor.fetchall()]
                print(f"üìã –ö–æ–ª–æ–Ω–∫–∏ –≤ admin_users: {columns}")
                
                if 'telegram_id' not in columns:
                    print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É telegram_id...")
                    cursor.execute("""
                        ALTER TABLE admin_users 
                        ADD COLUMN telegram_id BIGINT DEFAULT NULL
                    """)
                    
                    cursor.execute("""
                        CREATE INDEX IF NOT EXISTS idx_admin_users_telegram_id 
                        ON admin_users(telegram_id)
                    """)
                    
                    conn.commit()
                    print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ telegram_id –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
                else:
                    print("‚ÑπÔ∏è  –ö–æ–ª–æ–Ω–∫–∞ telegram_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
                cursor.execute("PRAGMA table_info(admin_users)")
                final_columns = [column[1] for column in cursor.fetchall()]
                print(f"üìã –§–∏–Ω–∞–ª—å–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏: {final_columns}")
            
            conn.close()
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å –±–∞–∑–æ–π {db_path}: {e}")
            continue
    
    return True

if __name__ == "__main__":
    print("üöÄ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
    success = fix_server_database()
    if success:
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        sys.exit(0)
    else:
        print("‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å!")
        sys.exit(1)