#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: —Å–æ–∑–¥–∞—ë—Ç CRM –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —É –∫–æ—Ç–æ—Ä—ã—Ö –∏—Ö –µ—â—ë –Ω–µ—Ç
–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–ª–∏ –≤—Ä—É—á–Ω—É—é
"""

import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PATH
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from app.database.models import User
from app.database.crm_models import Client, ClientType, ClientStatus

def sync_users_to_clients():
    """–°–æ–∑–¥–∞—ë—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ –∫–ª–∏–µ–Ω—Ç–æ–≤"""

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
    db_path = os.path.join(os.path.dirname(__file__), "admin_panel.db")
    engine = create_engine(f'sqlite:///{db_path}')
    Session = sessionmaker(bind=engine)
    session = Session()

    try:
        # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = session.query(User).all()
        print(f"üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")

        created_count = 0
        skipped_count = 0

        for user in users:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–ª–∏–µ–Ω—Ç
            existing_client = session.query(Client).filter(
                Client.telegram_user_id == user.id
            ).first()

            if existing_client:
                skipped_count += 1
                continue

            # –°–æ–∑–¥–∞—ë–º –∫–ª–∏–µ–Ω—Ç–∞
            client_name = user.first_name or user.username or f"–ö–ª–∏–µ–Ω—Ç {user.id}"

            client = Client(
                name=client_name,
                type=ClientType.INDIVIDUAL,
                status=ClientStatus.NEW,
                phone=user.phone,
                telegram=f"@{user.username}" if user.username else None,
                source="auto_sync",
                description="–°–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
                telegram_user_id=user.id,
                manager_id=1,
                created_by_id=1,
                created_at=datetime.now(),
                updated_at=datetime.now()
            )

            session.add(client)
            created_count += 1
            print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω –∫–ª–∏–µ–Ω—Ç –¥–ª—è user_id={user.id}: {client_name}")

        session.commit()

        print(f"\n‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞:")
        print(f"   –°–æ–∑–¥–∞–Ω–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: {created_count}")
        print(f"   –ü—Ä–æ–ø—É—â–µ–Ω–æ (—É–∂–µ –µ—Å—Ç—å): {skipped_count}")
        print(f"   –í—Å–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ –ë–î: {session.query(Client).count()}")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        session.rollback()
        import traceback
        traceback.print_exc()
        return False
    finally:
        session.close()

if __name__ == "__main__":
    success = sync_users_to_clients()
    sys.exit(0 if success else 1)
