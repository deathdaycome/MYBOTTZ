#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑–æ–≤—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤ –ø—Ä–æ–µ–∫—Ç–æ–≤
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ Python path
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

from datetime import datetime
from app.database.database import get_db
from app.database.models import ProjectStatus

def create_default_statuses():
    """–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤ –ø—Ä–æ–µ–∫—Ç–æ–≤"""
    
    default_statuses = [
        {
            "name": "–ù–æ–≤—ã–π",
            "description": "–ü—Ä–æ–µ–∫—Ç —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–æ–∑–¥–∞–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è",
            "color": "#6B7280",
            "icon": "fas fa-plus-circle",
            "is_default": True,
            "sort_order": 1
        },
        {
            "name": "–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏",
            "description": "–ü—Ä–æ–µ–∫—Ç —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π",
            "color": "#F59E0B",
            "icon": "fas fa-eye",
            "is_default": True,
            "sort_order": 2
        },
        {
            "name": "–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω",
            "description": "–ü—Ä–æ–µ–∫—Ç —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ",
            "color": "#10B981",
            "icon": "fas fa-check-circle",
            "is_default": True,
            "sort_order": 3
        },
        {
            "name": "–í —Ä–∞–±–æ—Ç–µ",
            "description": "–ü—Ä–æ–µ–∫—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
            "color": "#3B82F6",
            "icon": "fas fa-cogs",
            "is_default": True,
            "sort_order": 4
        },
        {
            "name": "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
            "description": "–ü—Ä–æ–µ–∫—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
            "color": "#8B5CF6",
            "icon": "fas fa-vial",
            "is_default": True,
            "sort_order": 5
        },
        {
            "name": "–ó–∞–≤–µ—Ä—à–µ–Ω",
            "description": "–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω",
            "color": "#059669",
            "icon": "fas fa-trophy",
            "is_default": True,
            "sort_order": 6
        },
        {
            "name": "–û—Ç–º–µ–Ω–µ–Ω",
            "description": "–ü—Ä–æ–µ–∫—Ç –æ—Ç–º–µ–Ω–µ–Ω",
            "color": "#DC2626",
            "icon": "fas fa-times-circle",
            "is_default": True,
            "sort_order": 7
        },
        {
            "name": "–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω",
            "description": "–ü—Ä–æ–µ–∫—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω",
            "color": "#6B7280",
            "icon": "fas fa-pause-circle",
            "is_default": True,
            "sort_order": 8
        }
    ]
    
    try:
        db = next(get_db())
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å—Ç–∞—Ç—É—Å—ã
        existing_count = db.query(ProjectStatus).count()
        if existing_count > 0:
            print(f"‚ÑπÔ∏è  –í –±–∞–∑–µ —É–∂–µ –µ—Å—Ç—å {existing_count} —Å—Ç–∞—Ç—É—Å–æ–≤. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ.")
            return
        
        # –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç—É—Å—ã
        created_count = 0
        for status_data in default_statuses:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
            existing = db.query(ProjectStatus).filter(ProjectStatus.name == status_data["name"]).first()
            if existing:
                print(f"‚ö†Ô∏è  –°—Ç–∞—Ç—É—Å '{status_data['name']}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
                continue
            
            status = ProjectStatus(
                name=status_data["name"],
                description=status_data["description"],
                color=status_data["color"],
                icon=status_data["icon"],
                is_default=status_data["is_default"],
                sort_order=status_data["sort_order"],
                is_active=True,
                created_at=datetime.utcnow()
            )
            
            db.add(status)
            created_count += 1
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Å—Ç–∞—Ç—É—Å: {status_data['name']}")
        
        db.commit()
        print(f"\nüéâ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ {created_count} —Å—Ç–∞—Ç—É—Å–æ–≤ –ø—Ä–æ–µ–∫—Ç–æ–≤!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–æ–≤: {e}")
        if 'db' in locals():
            db.rollback()
    finally:
        if 'db' in locals():
            db.close()

if __name__ == "__main__":
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤ –ø—Ä–æ–µ–∫—Ç–æ–≤...")
    create_default_statuses()
