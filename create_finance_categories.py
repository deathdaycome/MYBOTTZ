#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ Python path
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

from app.database.database import SessionLocal
from app.database.models import FinanceCategory, AdminUser
from datetime import datetime

def create_default_finance_categories():
    """–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤"""
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    db = SessionLocal()
    
    try:
        admin_user = db.query(AdminUser).filter(AdminUser.username == "admin").first()
        if not admin_user:
            print("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        existing_categories = db.query(FinanceCategory).count()
        if existing_categories > 0:
            print(f"–ù–∞–π–¥–µ–Ω–æ {existing_categories} —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ.")
            return
        
        # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤
        income_categories = [
            {
                "name": "–ü—Ä–æ–µ–∫—Ç—ã - –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –±–æ—Ç–æ–≤",
                "description": "–î–æ—Ö–æ–¥—ã –æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ Telegram-–±–æ—Ç–æ–≤",
                "color": "#28a745",
                "icon": "fas fa-robot"
            },
            {
                "name": "–ü—Ä–æ–µ–∫—Ç—ã - –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
                "description": "–î–æ—Ö–æ–¥—ã –æ—Ç –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
                "color": "#17a2b8",
                "icon": "fas fa-globe"
            },
            {
                "name": "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏",
                "description": "–î–æ—Ö–æ–¥—ã –æ—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π",
                "color": "#20c997",
                "icon": "fas fa-handshake"
            },
            {
                "name": "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏",
                "description": "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤, –¥–æ–º–µ–Ω—ã –∏ –ø—Ä–æ—á–µ–µ",
                "color": "#6f42c1",
                "icon": "fas fa-tools"
            },
            {
                "name": "–ë–æ–Ω—É—Å—ã –∏ –ø—Ä–µ–º–∏–∏",
                "description": "–ë–æ–Ω—É—Å–Ω—ã–µ –≤—ã–ø–ª–∞—Ç—ã –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤",
                "color": "#fd7e14",
                "icon": "fas fa-gift"
            }
        ]
        
        # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤
        expense_categories = [
            {
                "name": "–í—ã–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è–º",
                "description": "–û–ø–ª–∞—Ç–∞ —Ä–∞–±–æ—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π",
                "color": "#dc3545",
                "icon": "fas fa-user-tie"
            },
            {
                "name": "–ù–µ–π—Ä–æ—Å–µ—Ç–∏ –∏ API",
                "description": "–†–∞—Å—Ö–æ–¥—ã –Ω–∞ OpenAI, Claude –∏ –¥—Ä—É–≥–∏–µ AI-—Å–µ—Ä–≤–∏—Å—ã",
                "color": "#e83e8c",
                "icon": "fas fa-brain"
            },
            {
                "name": "–•–æ—Å—Ç–∏–Ω–≥ –∏ —Å–µ—Ä–≤–µ—Ä—ã",
                "description": "–û–ø–ª–∞—Ç–∞ —Ö–æ—Å—Ç–∏–Ω–≥–∞, VPS, –¥–æ–º–µ–Ω–æ–≤",
                "color": "#6c757d",
                "icon": "fas fa-server"
            },
            {
                "name": "–õ–∏—Ü–µ–Ω–∑–∏–∏ –∏ –ø–æ–¥–ø–∏—Å–∫–∏",
                "description": "–°–æ—Ñ—Ç, –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
                "color": "#007bff",
                "icon": "fas fa-key"
            },
            {
                "name": "–†–µ–∫–ª–∞–º–∞ –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥",
                "description": "–†–∞—Å—Ö–æ–¥—ã –Ω–∞ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ",
                "color": "#ffc107",
                "icon": "fas fa-bullhorn"
            },
            {
                "name": "–û—Ñ–∏—Å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã",
                "description": "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç, —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ, –ø—Ä–æ—á–∏–µ —Ä–∞—Å—Ö–æ–¥—ã",
                "color": "#6f42c1",
                "icon": "fas fa-building"
            },
            {
                "name": "–ù–∞–ª–æ–≥–∏ –∏ —Å–±–æ—Ä—ã",
                "description": "–ù–∞–ª–æ–≥–∏, –∫–æ–º–∏—Å—Å–∏–∏ –±–∞–Ω–∫–æ–≤",
                "color": "#dc3545",
                "icon": "fas fa-receipt"
            },
            {
                "name": "–û–±—É—á–µ–Ω–∏–µ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ",
                "description": "–ö—É—Ä—Å—ã, –∫–Ω–∏–≥–∏, –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏",
                "color": "#17a2b8",
                "icon": "fas fa-graduation-cap"
            }
        ]
        
        # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤
        for category_data in income_categories:
            category = FinanceCategory(
                name=category_data["name"],
                type="income",
                description=category_data["description"],
                color=category_data["color"],
                icon=category_data["icon"],
                created_by_id=admin_user.id,
                created_at=datetime.utcnow()
            )
            db.add(category)
        
        # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤
        for category_data in expense_categories:
            category = FinanceCategory(
                name=category_data["name"],
                type="expense",
                description=category_data["description"],
                color=category_data["color"],
                icon=category_data["icon"],
                created_by_id=admin_user.id,
                created_at=datetime.utcnow()
            )
            db.add(category)
        
        db.commit()
        
        total_income = len(income_categories)
        total_expense = len(expense_categories)
        total_categories = total_income + total_expense
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {total_categories} –±–∞–∑–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤:")
        print(f"   üìà –î–æ—Ö–æ–¥—ã: {total_income} –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
        print(f"   üìâ –†–∞—Å—Ö–æ–¥—ã: {total_expense} –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
        print("\nüìã –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤:")
        for cat in income_categories:
            print(f"   ‚Ä¢ {cat['name']}")
        print("\nüìã –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤:")
        for cat in expense_categories:
            print(f"   ‚Ä¢ {cat['name']}")
        
    except Exception as e:
        db.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {e}")
        raise
    finally:
        db.close()

if __name__ == "__main__":
    print("üèóÔ∏è  –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤...")
    create_default_finance_categories()
    print("‚úÖ –ì–æ—Ç–æ–≤–æ!")
