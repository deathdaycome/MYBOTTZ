#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ê–≤–∏—Ç–æ
–ó–∞–ø—É—Å—Ç–∏—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: python3 debug_avito.py
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, '/var/www/bot_business_card')

def test_imports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã"""
    print("=" * 60)
    print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ú–ü–û–†–¢–û–í")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤—ã–µ –∏–º–ø–æ—Ä—Ç—ã
    try:
        print("1. –ò–º–ø–æ—Ä—Ç –±–∞–∑–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π...")
        from app.admin import navigation
        print("   ‚úÖ navigation –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ navigation: {e}")
        return False
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    try:
        print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏...")
        nav_items = navigation.get_navigation_items(user_role="owner")
        print(f"   –ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {len(nav_items)}")
        
        avito_found = False
        for item in nav_items:
            if item.get('name') == '–ê–≤–∏—Ç–æ':
                avito_found = True
                print(f"   ‚úÖ –ê–≤–∏—Ç–æ –Ω–∞–π–¥–µ–Ω: {item}")
                break
        
        if not avito_found:
            print("   ‚ùå –ê–≤–∏—Ç–æ –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏")
            print("   –°–ø–∏—Å–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤:")
            for item in nav_items:
                print(f"      - {item.get('name')}: {item.get('url')}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏: {e}")
        return False
    
    # –¢–µ—Å—Ç 3: –ò–º–ø–æ—Ä—Ç —Å–µ—Ä–≤–∏—Å–∞ –ê–≤–∏—Ç–æ
    try:
        print("\n3. –ò–º–ø–æ—Ä—Ç —Å–µ—Ä–≤–∏—Å–∞ –ê–≤–∏—Ç–æ...")
        from app.services import avito_service
        print("   ‚úÖ avito_service –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ avito_service: {e}")
        print("   –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ aiohttp...")
        try:
            import aiohttp
            print("   ‚úÖ aiohttp —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except:
            print("   ‚ùå aiohttp –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –í—ã–ø–æ–ª–Ω–∏—Ç–µ: pip install aiohttp")
    
    # –¢–µ—Å—Ç 4: –ò–º–ø–æ—Ä—Ç —Ä–æ—É—Ç–µ—Ä–∞ –ê–≤–∏—Ç–æ
    try:
        print("\n4. –ò–º–ø–æ—Ä—Ç —Ä–æ—É—Ç–µ—Ä–∞ –ê–≤–∏—Ç–æ...")
        from app.admin.routers import avito
        print("   ‚úÖ –†–æ—É—Ç–µ—Ä avito –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ—É—Ç–µ—Ä
        print(f"   Router prefix: {avito.router.prefix}")
        print(f"   Routes count: {len(avito.router.routes)}")
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —Ä–æ—É—Ç–µ—Ä–∞ avito: {e}")
        
        # –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
        print("\n   –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–∫–∏:")
        import traceback
        traceback.print_exc()
    
    # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ app.py
    try:
        print("\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Ä–æ—É—Ç–µ—Ä–∞ –≤ app.py...")
        
        # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª app.py
        with open('/var/www/bot_business_card/app/admin/app.py', 'r') as f:
            content = f.read()
            
        if 'from .routers.avito import router as avito_router' in content:
            print("   ‚úÖ –ò–º–ø–æ—Ä—Ç —Ä–æ—É—Ç–µ—Ä–∞ –Ω–∞–π–¥–µ–Ω –≤ app.py")
        else:
            print("   ‚ùå –ò–º–ø–æ—Ä—Ç —Ä–æ—É—Ç–µ—Ä–∞ –ù–ï –Ω–∞–π–¥–µ–Ω –≤ app.py")
            
        if 'admin_router.include_router(avito_router)' in content:
            print("   ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–∞ –Ω–∞–π–¥–µ–Ω–æ –≤ app.py")
        else:
            print("   ‚ùå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–∞ –ù–ï –Ω–∞–π–¥–µ–Ω–æ –≤ app.py")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ app.py: {e}")
    
    # –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ authenticate
    try:
        print("\n6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ authenticate...")
        from app.admin.app import authenticate, get_current_user
        print("   ‚úÖ authenticate –∏ get_current_user –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ authenticate: {e}")
    
    return True

def check_running_app():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—É—â–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"""
    print("\n" + "=" * 60)
    print("–ü–†–û–í–ï–†–ö–ê –ó–ê–ü–£–©–ï–ù–ù–û–ì–û –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø")
    print("=" * 60)
    
    import subprocess
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã
    try:
        result = subprocess.run(['ps', 'aux'], capture_output=True, text=True)
        lines = result.stdout.split('\n')
        
        admin_processes = []
        for line in lines:
            if 'admin' in line.lower() and 'python' in line.lower():
                admin_processes.append(line)
        
        if admin_processes:
            print("–ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ—Ü–µ—Å—Å—ã –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏:")
            for proc in admin_processes[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"  {proc[:120]}...")
        else:
            print("‚ùå –ü—Ä–æ—Ü–µ—Å—Å—ã –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –ù–ï –Ω–∞–π–¥–µ–Ω—ã")
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º pm2
    try:
        result = subprocess.run(['pm2', 'list'], capture_output=True, text=True)
        print("\n–°—Ç–∞—Ç—É—Å PM2:")
        print(result.stdout[:500])
    except:
        print("PM2 –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è")

def test_direct_import():
    """–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏"""
    print("\n" + "=" * 60)
    print("–ü–†–Ø–ú–û–ô –¢–ï–°–¢ –ò–ú–ü–û–†–¢–ê")
    print("=" * 60)
    
    try:
        # –ú–µ–Ω—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        os.chdir('/var/www/bot_business_card')
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º app
        print("–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º admin app...")
        from app.admin.app import admin_router
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ—É—Ç—ã
        print(f"\n–í—Å–µ–≥–æ —Ä–æ—É—Ç–æ–≤ –≤ admin_router: {len(admin_router.routes)}")
        
        # –ò—â–µ–º —Ä–æ—É—Ç—ã –ê–≤–∏—Ç–æ
        avito_routes = []
        for route in admin_router.routes:
            if hasattr(route, 'path') and '/avito' in str(route.path):
                avito_routes.append(route)
                print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω —Ä–æ—É—Ç –ê–≤–∏—Ç–æ: {route.path}")
        
        if not avito_routes:
            print("  ‚ùå –†–æ—É—Ç—ã –ê–≤–∏—Ç–æ –ù–ï –Ω–∞–π–¥–µ–Ω—ã")
            print("\n  –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–æ—É—Ç–æ–≤:")
            for route in admin_router.routes[:20]:  # –ü–µ—Ä–≤—ã–µ 20
                if hasattr(route, 'path'):
                    print(f"    - {route.path}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä—è–º–æ–º –∏–º–ø–æ—Ä—Ç–µ: {e}")
        import traceback
        traceback.print_exc()

def main():
    print("üîç –û–¢–õ–ê–î–ö–ê –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –ê–í–ò–¢–û")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    print(f"–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤
    if os.path.exists('/var/www/bot_business_card'):
        print("‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞–π–¥–µ–Ω–∞")
    else:
        print("‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è /var/www/bot_business_card –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        sys.exit(1)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    test_imports()
    check_running_app()
    test_direct_import()
    
    print("\n" + "=" * 60)
    print("–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("=" * 60)
    print("1. –ï—Å–ª–∏ aiohttp –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: pip install aiohttp")
    print("2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: pm2 restart all")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: pm2 logs --lines 50")
    print("4. –û—á–∏—Å—Ç–∏—Ç–µ –∫–µ—à –±—Ä–∞—É–∑–µ—Ä–∞ –∏ –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É")

if __name__ == "__main__":
    main()