#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø—Ä–∞–≤–∫–∞—Ö
"""
import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent))

from app.database.database import get_db_context
from app.database.models import Project, User, ProjectRevision
from app.services.notification_service import notification_service
from app.config.logging import get_logger

logger = get_logger(__name__)

async def test_revision_notifications():
    """–¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø—Ä–∞–≤–∫–∞—Ö"""
    try:
        with get_db_context() as db:
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            test_user = User(
                telegram_id=12345,
                first_name="–¢–µ—Å—Ç",
                username="test_user",
                phone="+79123456789",
                email="test@example.com"
            )
            db.add(test_user)
            db.flush()
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç
            test_project = Project(
                title="–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è –ø—Ä–∞–≤–æ–∫",
                description="–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞",
                user_id=test_user.id,
                status="in_progress",
                estimated_cost=50000,
                estimated_hours=40,
                complexity="medium"
            )
            db.add(test_project)
            db.flush()
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø—Ä–∞–≤–∫—É
            test_revision = ProjectRevision(
                project_id=test_project.id,
                revision_number=1,
                title="–¢–µ—Å—Ç–æ–≤–∞—è –ø—Ä–∞–≤–∫–∞",
                description="–¢–µ—Å—Ç–æ–≤–∞—è –ø—Ä–∞–≤–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π",
                priority="medium",
                status="open",
                created_by_id=test_user.id
            )
            db.add(test_revision)
            db.flush()
            
            print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã")
            print(f"üìã –ü—Ä–æ–µ–∫—Ç ID: {test_project.id}")
            print(f"üìù –ü—Ä–∞–≤–∫–∞ ID: {test_revision.id}")
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: {test_user.id}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –ø—Ä–∞–≤–∫–µ
            print("\nüîî –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –ø—Ä–∞–≤–∫–µ...")
            await notification_service.notify_new_revision(test_revision, test_project, test_user)
            print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –ø—Ä–∞–≤–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
            print("\nüîî –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞...")
            old_status = test_revision.status
            test_revision.status = "completed"
            await notification_service.notify_revision_status_changed(
                test_revision, test_project, test_user, old_status
            )
            print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            
            db.commit()
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø—Ä–∞–≤–∫–∞—Ö...")
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º notification_service
    # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –±–æ—Ç –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    from telegram import Bot
    from app.config.settings import get_settings
    
    settings = get_settings()
    if settings.BOT_TOKEN:
        bot = Bot(token=settings.BOT_TOKEN)
        notification_service.set_bot(bot)
        print("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    else:
        print("‚ö†Ô∏è BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å—Å—è")
    
    await test_revision_notifications()
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    asyncio.run(main())
